name: ai-korean-study-partner

x-common-env: &common_env
  HF_HOME: /models/hf
  TRANSFORMERS_CACHE: /models/hf
  TOKENIZERS_PARALLELISM: "false"
  OMP_NUM_THREADS: "4"
  OPENBLAS_NUM_THREADS: "4"
  MKL_NUM_THREADS: "4"
  NUMEXPR_NUM_THREADS: "4"

networks:
  web: {}

volumes:
  models: {}
  cache: {}
  logs: {}

services:
  # Reverse proxy (chỉ 80/443). KHÔNG map 5000–5005 ở đây.
  gateway:
    image: caddy:2
    container_name: gateway
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile:ro
      - logs:/var/log/caddy
    networks: [web]
    depends_on:
      - main_service

  main_service:
    build: ./main_service
    restart: always
    env_file: [.env]                # nếu cần OPENAI_API_KEY
    environment:
      <<: *common_env
      UVICORN_WORKERS: "1"
      CHAT_URL: http://chat_service:5001
      MFA_URL:  http://mfa_service:5002
      TQG_URL:  http://tqg_service:5003
      TTS_URL:  http://tts_service:5004
      ASR_URL:  http://asr_service:5005
      LOG_FOLDER: /app/log/pronun
    volumes:
      - logs:/app/log
    networks: [web]
    # publish nếu muốn gọi trực tiếp không qua Caddy:
    ports:
      - "5000:5000"
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://localhost:5000/health || curl -fsS http://localhost:5000/health || exit 1"]
      interval: 30s
      timeout: 5s
      start_period: 20s
      retries: 3

  chat_service:
    build: ./chat_service
    restart: always
    env_file: [.env]
    environment:
      <<: *common_env
    networks: [web]
    ports:
      - "5001:5001"
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://localhost:5001/health || curl -fsS http://localhost:5001/health || exit 1"]
      interval: 30s
      timeout: 5s
      start_period: 20s
      retries: 3

  mfa_service:
    build: ./mfa_service
    restart: always
    environment:
      <<: *common_env
    networks: [web]
    ports:
      - "5002:5002"
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://localhost:5002/health || curl -fsS http://localhost:5002/health || exit 1"]
      interval: 30s
      timeout: 6s
      start_period: 40s
      retries: 3

  tqg_service:
    build: ./tqg_service
    restart: always
    environment:
      <<: *common_env
      STORAGE_DIR: /data/tqg
    networks: [web]
    ports:
      - "5003:5003"
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://localhost:5003/health || curl -fsS http://localhost:5003/health || exit 1"]
      interval: 30s
      timeout: 5s
      start_period: 20s
      retries: 3

  tts_service:
    build: ./tts_service
    restart: always
    environment:
      <<: *common_env
    networks: [web]
    ports:
      - "5004:5004"
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://localhost:5004/health || curl -fsS http://localhost:5004/health || exit 1"]
      interval: 30s
      timeout: 6s
      start_period: 40s
      retries: 3

  asr_service:
    build: ./asr_service
    restart: always
    environment:
      <<: *common_env
      WHISPER_MODEL: "medium"
    networks: [web]
    ports:
      - "5005:5005"
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://localhost:5005/health || curl -fsS http://localhost:5005/health || exit 1"]
      interval: 30s
      timeout: 5s
      start_period: 30s
      retries: 3
